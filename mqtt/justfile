default:
    @just --list

update: update-producer update-consumer

[private]
[working-directory("producer")]
update-producer:
    @echo "{{ GREEN }} update producer packages {{ NORMAL }}"
    @go get -u

[private]
[working-directory("consumer")]
update-consumer:
    @echo "{{ GREEN }} update consumer packages {{ NORMAL }}"
    @go get -u

# set up the dev environment with docker-compose
dev cmd *flags:
    #!/usr/bin/env bash
    echo '{{ BOLD + YELLOW }}Development environment based on docker-compose{{ NORMAL }}'
    set -eu
    set -o pipefail
    if [ {{ cmd }} = 'down' ]; then
      docker compose down --volumes --remove-orphans
    elif [ {{ cmd }} = 'up' ]; then
      docker compose up --wait -d {{ flags }}
    else
      docker compose {{ cmd }} {{ flags }}
    fi

run: (dev "up")
    #!/usr/bin/env bash
    set -eu
    set -o pipefail

    cleanup() {
      echo "{{ BOLD + RED }}Shutting down producer...{{ NORMAL }}"
      kill $PRODUCER_PID
      wait
    }

    trap cleanup INT

    echo "{{ GREEN }} run producer {{ NORMAL }}"
    go run ./producer &
    PRODUCER_PID=$!

    echo "{{ GREEN }} run consumer {{ NORMAL }}"
    go run ./consumer
