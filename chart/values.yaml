emqx:
  affinity: {}
  containerSecurityContext:
    enabled: false
    runAsNonRoot: true
    runAsUser: 1000
  emqxConfig:
    EMQX_CLUSTER__DISCOVERY_STRATEGY: k8s
    EMQX_CLUSTER__K8S__ADDRESS_TYPE: hostname
    EMQX_CLUSTER__K8S__APISERVER: https://kubernetes.default.svc:443
    EMQX_CLUSTER__K8S__NAMESPACE: '{{ .Release.Namespace }}'
    EMQX_CLUSTER__K8S__SERVICE_NAME: '{{ .Release.Name }}-headless'
    EMQX_CLUSTER__K8S__SUFFIX: svc.cluster.local
    EMQX_DASHBOARD__DEFAULT_PASSWORD: public
    EMQX_DASHBOARD__DEFAULT_USERNAME: admin
    EMQX_LISTENERS__TCP__DEFAULT__AUTHENTICATION__1__MECHANISM: "password_based"
    EMQX_LISTENERS__TCP__DEFAULT__AUTHENTICATION__1__BACKEND: "http"
    EMQX_LISTENERS__TCP__DEFAULT__AUTHENTICATION__1__ENABLE: "true"
    EMQX_LISTENERS__TCP__DEFAULT__AUTHENTICATION__1__METHOD: "post"
    EMQX_LISTENERS__TCP__DEFAULT__AUTHENTICATION__1__URL: "http://soteria:8080/v2/auth"
    EMQX_LISTENERS__TCP__DEFAULT__ENABLE_AUTHN: "quick_deny_anonymous"
    EMQX_LISTENERS__TCP__INTERNAL__ENABLE: "true"
    EMQX_LISTENERS__TCP__INTERNAL__BIND: 11883
    EMQX_LISTENERS__TCP__INTERNAL__ENABLE_AUTHN: "false"
  emqxLicenseSecretName: null
  image:
    pullPolicy: IfNotPresent
    repository: emqx/emqx
  ingress:
    dashboard:
      annotations: {}
      enabled: false
      hosts:
        - dashboard.emqx.local
      path: /
      pathType: ImplementationSpecific
      tls: []
  initContainers: {}
  metrics:
    enabled: false
    type: prometheus
  nodeSelector: {}
  persistence:
    accessMode: ReadWriteOnce
    enabled: false
    size: 20Mi
    storageClassName: ""
  podAnnotations: {}
  podManagementPolicy: Parallel
  podSecurityContext:
    enabled: false
    fsGroup: 1000
    fsGroupChangePolicy: Always
    runAsUser: 1000
    supplementalGroups:
    - 1000
  recreatePods: false
  replicaCount: 3
  resources:
    limits:
      cpu: 256m
      memory: 800Mi
      ephemeral-storage: 1Gi
    requests:
      cpu: 512m
      memory: 900Mi
      ephemeral-storage: 1Gi

  service:
    annotations: {}
    dashboard: 18083
    externalIPs: []
    loadBalancerSourceRanges: []
    mgmt: 8081
    mqtt: 1883
    mqttssl: 8883
    nodePorts:
      dashboard: null
      dashboardtls: null
      mgmt: null
      mqtt: null
      mqttssl: null
      ws: null
      wss: null
    type: ClusterIP
    ws: 8083
    wss: 8084
  tolerations: []
